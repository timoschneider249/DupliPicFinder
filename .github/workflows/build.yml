name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build executables
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Build executable
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            pyinstaller --onefile --name DupliPicFinder src/main.py
            ls -la dist  # List files in the dist directory for debugging
          else
            pyinstaller --onefile --name DupliPicFinder.exe src/main.py
            ls -la dist  # List files in the dist directory for debugging
          fi
        shell: bash

      - name: Archive Linux executable
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: executable-linux
          path: dist/DupliPicFinder

      - name: Archive Windows executable
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: executable-windows
          path: dist/DupliPicFinder.exe

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse version from setup.py
        id: get_version
        run: |
          VERSION=$(python setup.py --version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Download Linux executable
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: executable-linux
          path: ./dist

      - name: Download Windows executable
        if: always()
        uses: actions/download-artifact@v4
        with:
          name: executable-windows
          path: ./dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./dist/DupliPicFinder
            ./dist/DupliPicFinder.exe
          draft: false
          prerelease: false
          tag_name: v${{ env.VERSION }}
          name: DupliPicFinder v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
